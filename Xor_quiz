#include<bits/stdc++.h>
using namespace std;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
int n,m,K;
int pr[1000010],mn[1000010],p=0,v[1000010],o=0;
int used[1000010],sz[1050000],g[1000010],f[1000010],S[1000010];
bool isnt[1000010],in[1000010];
vector<int>Fail;
void init(int N){
	for(int i=2;i<=N;i++){
		if(!isnt[i]) mn[pr[++p]=i]=i;
		for(int j=1;j<=p&&pr[j]*i<=N;j++){
			isnt[pr[j]*i]=1;
			mn[pr[j]*i]=pr[j];
			if(i%pr[j]==0) break;
		}
	}
	g[1]=1;
	for(int i=2;i<=N;i++){
		int x=i,y=mn[i];
		while(x%y==0) x/=y;
		g[i]=g[x]*y;
	}
}
struct ld{
	int num[21],id[21];
	vector<int>V;
	ld(){
		memset(num,0,sizeof(num));
		memset(id,0,sizeof(id));
		V.resize(0);
	}
	int ins(int x){
		int nw=x,S=0;
		for(int i=20;i>=0;i--) if((nw>>i)&1){
			if(!num[i]){
				V.push_back(x);
				id[i]=S^(1<<(V.size()-1));
				num[i]=nw;
				return 0;
			}
			else{
				nw^=num[i];
				S^=id[i];
			}
		}
		return S;
	}
}b[1000010];
int main(){
	scanf("%d%d",&m,&n);
	init(m);
	for(int i=1;i<=m;i++) if(g[i]==i) v[++o]=i;
	printf("%d ",o);
	for(int i=1;i<=o;i++) printf("%d ",v[i]);puts(""),fflush(stdout);
	for(int i=1;i<=o;i++) scanf("%d",&f[v[i]]); 
	for(int j=1;j<=p;j++) for(int i=m/pr[j];i>=1;i--) if(i%pr[j]) f[i*pr[j]]^=f[i];
	for(int j=1;j<=p;j++) for(int i=1;i*pr[j]<=m;i++) f[i]^=f[i*pr[j]];
	for(int i=1;i<=m;i++) if(g[i]!=i) assert(f[i]==0);
	for(int i=1;i<=m;i++){
		S[i]=b[g[i]].ins(i);
		if(S[i]) Fail.push_back(i); 
	}
	for(int i=0;i<(1<<20);i++) sz[i]=sz[i>>1]+(i&1);
	int nw=0;
	for(int i=1;i<=m;i++) if(g[i]==i){
		used[i]=b[i].ins(f[i]);
		nw+=sz[used[i]];
		for(int j=0;j<b[i].V.size();j++) if(used[i]&(1<<j)) in[b[i].V[j]]=1;
	}
	while(nw^n){
		int x=Fail[rng()%Fail.size()];
		nw-=in[x],in[x]^=1,nw+=in[x];
		nw-=sz[used[g[x]]],used[g[x]]^=S[x],nw+=sz[used[g[x]]];
		for(int j=0;j<b[g[x]].V.size();j++) if(S[x]&(1<<j)) in[b[g[x]].V[j]]^=1; 
	}
	for(int i=1;i<=m;i++) if(in[i]) printf("%d ",i);puts("");
}
