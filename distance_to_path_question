#include<bits/stdc++.h>
using namespace std;
int n,m,dfn[201000],sz[201000];
vector<int>g[201000];
struct BIT{
	int tr[201000];
	inline void ad(int x,int z){
		for(;x<=n;x+=(x&-x))tr[x]+=z;
	}
	inline int ask(int x){
		int s=0;
		for(;x;x-=(x&-x))s+=tr[x];
		return s;
	}
}ik[23];
int ps[201000][24];
int f[201000][20],d[201000];
void dfs(int x){
	dfn[x]=++dfn[0],sz[x]=1;
	for(int v:g[x])if(v!=f[x][0]){
		f[v][0]=x;d[v]=d[x]+1;
		for(int i=1;i<19;i++)f[v][i]=f[f[v][i-1]][i-1];
		dfs(v),sz[x]+=sz[v];
	}
}
int lca(int u,int v){
	if(d[u]<d[v])swap(u,v);int a=d[u]-d[v];
	for(int i=18;i>=0;i--)if((a>>i)&1)u=f[u][i];
	if(u==v)return u;
	for(int i=18;i>=0;i--)if(f[u][i]!=f[v][i])u=f[u][i],v=f[v][i];
	return f[u][0];
}
int main(){
	scanf("%d",&n);
	for(int i=1,u,v;i<n;i++)scanf("%d%d",&u,&v),g[u].push_back(v),g[v].push_back(u);
	dfs(1);
	scanf("%d",&m);
	for(int i=0,op,u,v,z,d;i<m;i++){
		scanf("%d%d",&op,&u);
		if(op==1){
			int ans=0,o=u;
			for(int j=0;o&&j<=20;j++)ans+=ps[o][j]+ik[j].ask(dfn[o]+sz[o]-1)-ik[j].ask(dfn[o]-1),o=f[o][0];
			printf("%d\n",ans);
		}
		else{
			scanf("%d%d%d",&v,&z,&d);
			int lc=lca(u,v);
			ik[d].ad(dfn[u],z),ik[d].ad(dfn[v],z);
			ik[d].ad(dfn[lc],-z*2);
			for(int j=0;j<=d;j++){
				if(f[lc][0]){
					ps[lc][d-j]+=z;
					if(d>j)ps[lc][d-j-1]+=z;
					lc=f[lc][0];
				}
				else{
					for(int k=0;k<=d-j;k++)
						ps[lc][k]+=z;
					break;
				}
			}
		}
	}
	return 0;
}
	
